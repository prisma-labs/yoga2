/**
 * This file is automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 * 
 * For better typings, you should provide configuration for how to lookup 
 * the types. See the documentation for "typegenAutoConfig"
 */
import * as ctx from "../context"

declare global {
  interface GraphQLNexusGen extends GraphQLNexusGenTypes {}
}

// Maybe Promise
export type MaybePromise<T> = T | PromiseLike<T>;

// Maybe Promise List
export type MaybePromiseList<T> = Array<MaybePromise<T>>;

// Maybe Thunk
export type MaybeThunk<T> = T | (() => T);

// Maybe Thunk, with args
export type MaybeThunkArgs<T, A> = T | ((args?: A) => T);

export type QueryHelloReturnType = string;

export interface QueryHelloArgs {
  name?: null | string;
}

export type QueryUsersReturnType = MaybePromiseList<User_ReturnType>;

export type QueryRootType = {};

export type Query_ReturnType = {};

export type UserIdReturnType = string;

export type UserNameReturnType = string;

export interface UserRootType {
  id: string;
  name: string;
}

export type User_ReturnType = {
  id: MaybeThunk<MaybePromise<string>>;
  name: MaybeThunk<MaybePromise<string>>;
}

export interface GraphQLNexusGenArgTypes {
  Query: {
    hello: QueryHelloArgs;
  };
}

export interface GraphQLNexusGenRootTypes {
  Query: QueryRootType;
  User: UserRootType;
}

export interface GraphQLNexusGenReturnTypes {
  Query: {
    hello: QueryHelloReturnType;
    users: QueryUsersReturnType;
  };
  User: {
    id: UserIdReturnType;
    name: UserNameReturnType;
  };
}

export interface GraphQLNexusGenTypes {
  argTypes: GraphQLNexusGenArgTypes;
  backingTypes: GraphQLNexusGenRootTypes;
  returnTypes: GraphQLNexusGenReturnTypes;
  context: ctx.Context;
  enums: {};
  objects: {
    Query: QueryRootType;
    User: UserRootType;
  };
  interfaces: {};
  unions: {};
  scalars: {
    String: any;
    ID: any;
    Boolean: any;
  };
  inputObjects: {};
  allInputTypes: 
    | Extract<keyof GraphQLNexusGenTypes['inputObjects'], string>
    | Extract<keyof GraphQLNexusGenTypes['enums'], string>
    | Extract<keyof GraphQLNexusGenTypes['scalars'], string>;
  allOutputTypes: 
    | Extract<keyof GraphQLNexusGenTypes['objects'], string>
    | Extract<keyof GraphQLNexusGenTypes['enums'], string>
    | Extract<keyof GraphQLNexusGenTypes['unions'], string>
    | Extract<keyof GraphQLNexusGenTypes['interfaces'], string>
    | Extract<keyof GraphQLNexusGenTypes['scalars'], string>;
}

export type Gen = GraphQLNexusGenTypes;
